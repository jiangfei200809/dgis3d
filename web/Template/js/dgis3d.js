define(function(){var q={renderer:null,scene:null,camera:null,sceneRange:null};q.init=function(a,b,c,d){q.sceneRange={l:b,w:c,h:d};q.scene=new THREE.Scene();var e=document.getElementById(a);var f=e.offsetWidth;var g=e.offsetHeight;q.camera=new THREE.PerspectiveCamera(40,f/g,0.1,10000000);q.camera.up=new THREE.Vector3(0,1,0);var h=new THREE.AmbientLight("#ccc");q.scene.add(h);q.scene.add(q.camera);q.renderer=new THREE.WebGLRenderer({canvas:e,});q.renderer.setClearColor("#3d5c94");q.renderer.setSize(f,g)};q.view=function(a){var b={x:0,y:0,z:0};switch(a){case 0:b.z=q.sceneRange.h*10;break;case 1:b.y=q.sceneRange.w*1;break;case 2:b.x=q.sceneRange.l*1;b.y=q.sceneRange.w*1;b.z=q.sceneRange.h*2;break}var c=q.geometry.getPosition(b,q.sceneRange.l,q.sceneRange.w,q.sceneRange.h);q.camera.position.set(c.x,c.y,c.z);q.render()};q.material={colorMaterial:function(a,b,c){var d;if(c){d=new THREE.MeshPhongMaterial({color:a,transparent:b<1,opacity:b,})}else{d=new THREE.MeshLambertMaterial({color:a,transparent:b<1,opacity:b,})}return d},bitmapMaterial:function(a,b,c,d){var e=THREE.ImageUtils.loadTexture(a,{},function(){e.repeat.set(c,d);e.wrapS=THREE.RepeatWrapping;e.wrapT=THREE.RepeatWrapping;q.render()});return new THREE.MeshLambertMaterial({map:e,transparent:b<1,opacity:b,visible:true})},bitmapsMaterial:function(a){var b=[];for(var i=0;i<a.length;i++){var c=a[i];if(c.visible){var d=THREE.ImageUtils.loadTexture(c.bitmapPath,{},function(){d.repeat.set(c.repeatX,c.repeatY);d.wrapS=THREE.RepeatWrapping;d.wrapT=THREE.RepeatWrapping;q.render()});var e=new THREE.MeshPhongMaterial({map:d});b.push(e)}else{b.push(new THREE.MeshPhongMaterial({color:c.color}))}}return new THREE.MeshFaceMaterial(b)}};q.geometry={box:function(l,w,h){var a=new THREE.CubeGeometry(l,h,w);return a},polygon:function(a){var b=q.geometry.computeArea(a);var c=new THREE.Shape();var d=a[0];c.moveTo(d.x,d.y);for(var i=1;i<a.length;i++){d=a[i];c.lineTo(d.x,d.y)}d=a[0];c.lineTo(d.x,d.y);return c},circle:function(a,r){var b=new THREE.Shape();b.moveTo(0,circleRadius);b.quadraticCurveTo(r,r,r,0);b.quadraticCurveTo(r,-r,0,-r);b.quadraticCurveTo(-r,-r,-r,0);b.quadraticCurveTo(-r,r,0,r);return b},line:function(a){var b=new THREE.Shape();var c=[];var d=a[0];b.moveTo(d.x,d.y);for(var i=1;i<a.length;i++){c.push(new THREE.Vector2(d.x,d.y))}b.splineThru(c);return b},extrudeShape:function(a,h){return new THREE.ExtrudeGeometry(a,{amount:h,bevelThinkness:2,bevelSize:1,bevelSegments:3,bevelEnabled:true,curveSegments:12,steps:1})},cylinder:function(r,l){return new THREE.CylinderGeometry(r,r,l,r,r)},model:function(l,w,h,j,k,m,n,o){var p=new THREE.MTLLoader();p.load(j,function(g){g.preload();var i=new THREE.OBJLoader();i.setMaterials(g);i.load(k,function(a){var b=new THREE.Box3();b.expandByObject(a);var c=b.max.x-b.min.x;var d=b.max.z-b.min.z;var e=b.max.y-b.min.y;a.scale.set(l/c,h/e,w/d);var x=(b.max.x+b.min.x)/2*a.scale.x;var y=(b.max.y+b.min.y)/2*a.scale.y;var z=(b.max.z+b.min.z)/2*a.scale.z;var f=q.geometry.getPosition(n,l,w,h);a.position.set(0-x,0-y,0-z);a.castShadow=true;a.receiveShadow=true;let wrapper=new THREE.Object3D();wrapper.position.set(f.x,f.y,f.z);wrapper.add(a);wrapper.rotation.set(m.x,m.y,m.z);o(wrapper)})})},computeArea:function(a){var x=[];var y=[];for(var i=1;i<a.length;i++){point=a[i];x.push(point.x);y.push(point.y)}var b=Math.min.apply(Math,x);var c=Math.max.apply(Math,x);var d=Math.min.apply(Math,y);var e=Math.max.apply(Math,y);return{minX:b,maxX:c,minY:d,maxY:e}},mesh:function(a,b,c){var d=new THREE.Mesh(a,c);d.castShadow=true;d.receiveShadow=true;var e=new THREE.Box3();e.expandByObject(d);var l=e.max.x-e.min.x;var w=e.max.z-e.min.z;var h=e.max.y-e.min.y;var b=q.geometry.getPosition(b,l,w,h);d.position.set(b.x,b.y,b.z);d.updateMatrix();return d},getPosition:function(a,l,w,h){var x=a.x+(l-q.sceneRange.l)/2;var y=a.z+(h-q.sceneRange.h)/2;var z=a.y+(w-q.sceneRange.w)/2;return{x:x,y:y,z:z}},restorePositon:function(a,l,w,h){var x=a.x-(l-q.sceneRange.l)/2;var z=a.y-(h-q.sceneRange.h)/2;var y=a.z-(w-q.sceneRange.w)/2;return{x:x,y:y,z:z}},clipBox:function(a,b){var c=new ThreeBSP(a);var d=c.subtract(new ThreeBSP(b));var e=d.toMesh(a.material);e.geometry.computeVertexNormals();return e},mergeBox:function(a){var b=new THREE.Geometry();for(var i=0;i<a.length;i++){var c=a[i];b.merge(c.geometry,c.matrix)}return b}};q.light={pointLight:function(a,b,c,d){var e=new THREE.PointLight(b,c,d);var f=q.geometry.getPosition(a,2,2,2);e.position.set(f.x,f.y,f.z);return e}};q.event={getMesh:function(c,d){c.preventDefault();var e=new THREE.Raycaster();var f=new THREE.Vector2();f.x=(c.clientX/window.innerWidth)*2-1;f.y=-(c.clientY/window.innerHeight)*2+1;e.setFromCamera(f,q.camera);var g=[];q.scene.children.forEach(child=>{for(var i=0;i<child.children.length;i++){var h=child.children[i];for(var n=0;n<h.children.length;n++){g.push(h.children[n])}}});var j=e.intersectObjects(g);var k=[];for(var i=0;i<j.length;i++){var l=j[i];if(l.object instanceof THREE.Mesh){var m=l.object.parent;if(m.name=="")m=m.parent;m.userData.distance=l.distance;k.push(m)}}j=e.intersectObjects(q.scene.children);for(var i=0;i<j.length;i++){var l=j[i];if(l.object instanceof THREE.Mesh){var m=l.object;m.userData.distance=l.distance;k.push(m)}}k=k.sort(function(a,b){return a.userData.distance-b.userData.distance});d(k[0])}};q.render=function(){q.renderer.render(q.scene,q.camera);requestAnimationFrame(q.render)};return q});